fillBlacks(emptyBaord, numOfBlacks):
	put a center block 
	make list of possible black spaces
	return fillBlacksHelper(emptyBoard, numOFBlacks, possibleList)

fillBlacksHelper(board, blacksRequired, possibleSpaces):
	if blacks == blacksRequired:
		if it's disconnected:
			return None
		else:
			return board
	elif blacks > blacksRequired:
		return None
	# Set up for next recursion call
	checkedSpaces = copy(possibleSpaces)
	for space in checkedSpaces:
		put black square
		fill implied squares for that - check if it's valid, if not, continue to next space
		mirror it - 
		result = fillBlacksHelper(board, blacksRequired, possibleSpaces)
		if result is not None:
			return result